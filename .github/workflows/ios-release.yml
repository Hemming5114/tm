name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      # 打印可用的 Xcode 版本
      - name: List Available Xcode Versions
        run: ls -la /Applications/ | grep "Xcode"

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.29.0'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
#      - name: Setup CocoaPods
#        run: |
#          cd ios
#          rm -rf Pods
#          rm -f Podfile.lock
#          pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"

      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: MIIMiQIBAzCCDFAGCSqGSIb3DQEHAaCCDEEEggw9MIIMOTCCBtcGCSqGSIb3DQEHBqCCBsgwggbEAgEAMIIGvQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQI068sJOl0v/MCAggAgIIGkFOeM1cKlTIm1VywweGz8Ukw2b0SfTzo4DcH0b7LdudQFoLCWSinZ75sM4/AMYAhLSRIIR2/O1coFCy4H36yk/EmZqW8X8oiNX6yIkxNA6tr18pb9lVSEf7dz5vaJZHXEbvcY+PYDffktsJmZP/YsCqNSErJBiSuNbcET1rr+PMpOr5uXj21BkLAivu4pkdbDJqtmjT9xYFBmWrLqKcrsmqrmj8E8TbjNXW1GheLP5VcAsk5cz0PjqJfpJH2mAwuroNuxXKW+kt09Oq1m6EYaAezMlMNvwTMRdUmRlnHuL19o4HGTSermWL0/Rw2kytPgtNudO1p+RD8iLcDIhrdLASAOeo4nxBbv0shiMtAsBRojyPn1yDOlogJQraZQjG8pEeVPB8LLXAF6kBTtl2gGJKhbBPZAgM5hr7GHT2iDepEhv+IpSb4GuWuR7FooM05hYAAEqysVfH65rUmAJgQsX8658E11nBkcJkpKQ3SFyDTX8nc253znuGrDOzPhNzKaKsfVt3PUmNA3FKg1cl7p7uYDTl/FH7QB6WTqh3lzjDtZVsjMF1ias0C1m2JF6dy/3LgDv9FeFqT44rlhb0BBuUjDeTd4/Tp0gAdmqltUXd31MbJ4VyiWvkcRy874ihME/Ih5Ei/UamwZRYz6KkMGvll7NRBCJiqN1CN3H0IOiVtIdA6WFrFz3XF7VDcYZVTqcpxo1XTlAo0QPBpUUdfkAtEHBokUf6kx6LTccNkrPffJIEPMtjhhcPvT8uuZGnJwy/G4BLcqBNehY4Xtbe6Vg/fEsXFe1888uB8GC39IrMKJ32ntMiWlmpJw44DO81wh0O08cX0u7a1SGMsONWRAW9rV6p3ghIzblovLuU6QI2BmgISPdHbfh2NmcRscuC5Ojt3F1s8NQsIzwN1cdm3qvdC9ZrNuxyVLj6vPmr0zTqIUxt2fJqbPy26SxK9S8Ko+SGldTacdzBXncadRlKHK80Vq3sQA2dNd/bmBl/lWwG1vUUV2xVNVpjpCPx+L7MLMfv0hBwjsR2803AgnahToMZtc55dORPZz35F2BgTFgPAzRYq+W83DQneL34RDKSj4fv8GA3HZb9SM2VLDYyrQf2zvBkIJB7YnsciCJ445oB1Q03CkQtmWqgYmgEgCNTBUT9offmdSJrD4MNybIpI8d2P8DICGX211KNI/nBT1UbKtTQW4Y5WO+D4otqzaOfKE3lxdzCqg2nlV1UMM6lc1nxaqlsW8RMBUcttoO4frnCAVBJdY9uopZfl3hVq90ge56uMIgug6oAWCg355dOM2ge0KEZQnHo3ou6CySgB5dxEaG8AQgSWkHwDZp/6Vmq19wo8HFwLHUGXODwBhUkDVrcRzwYMXHspWMC7O2bEKR7y2YBU0nO/qWOnMZgUsRLlQwpXdCtCsOK8jsjim7awWk7MbS/Lsggw2YzszSP63erdzIJajBAQe7cpDyFmHaR56lvV8jeRsM6vGRzZFBbEq1xIBFRdiM3J2Ha4EcyA7izPwqW49IS5/857eviddnitEWRf1Yd09RDzA5xgpOTXlz7Aj1/jebCHe4326H7CsUuErD3n9dnO7074Ek8Pi+pGoi0labR1UlwWX31WP4YjYAqF2da9Dn1zj+/0pGc2RzfLYL+uCejDAcZiv1x+Umwl3DCOUOjJendJ+N38eWe1wevH4hU5eRmS2d2LbRTDz9zta+FaWHnlhtE9+13AXEVv1W3mf6ZhWDmMbqsgsY1CebuaOSO6DAB3geigCNkG9n2dm2hdQV1OvRBIEIcBRpxAh2xJ73rPKTma7Jm9HnotjdmDv8pSws5MxwLAK8CW0IckSTCbNknqxMcLS69/6g+tjDQO0nDrYLwFhHYPEFXkL0kVHuB31dnfOplaFMald1G3E2WP3+2kSkUU6APaOjoj5MDUb8S3XlCd2a0J6JPgZaqPQr+4eCKe/KoZO0DfUWWR/BLzjsc10UXVYJMdo6ZYnYnz7wN6VgzaQwjrOjxtIe+nj0/gX4UdtML1gjvbTc70x0EpbS4QDRdM2cLS/9MZIVmxTS/80ZrBI26Fw3WUL3NlQrTLzOwW4L+cOEi0HJ14flMWa9KMJKlj9D3sXZjUmc5hWYHtR2lCeXKMEm4Z1ZU+cs+9WssVzv+GgJFKkl96uwehEb4cG6yPlOoYBLYp/UDlg6Onk7DpDbJVPBfbunxTOVWt7ZkiW+aJbUmfIVDgNTAyWJhS65bkASTJPsL/6TCCBVoGCSqGSIb3DQEHAaCCBUsEggVHMIIFQzCCBT8GCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZIhvcNAQwBAzAOBAgOjQN6UHef+AICCAAEggTIaEwnCxFNINjGiQVqqAulWVA1ZyYFDcHzuSwBoO6f8wbG6npyMV6DwZCjgdjc+rnMRih+5AIzBJz/nGGo9mcZs1N72jhI1Air3yLA5fhqPDTLn3CxmyzHPxOz3Tyy1aKlhK1rmC8GfCvz8gQkEujTm4+bVO9NOW5tIF3pjoapO44bkvj0KPMoK4QWXBIhhhtHxN5JzPDWGb+flbmzMRWnjv59Fsp8UOtbHJbkUdwPYXemXwfUQvNJfRFwtRB5wIKJVa4504MRInSYoNl2OU+3XjCVpaOgTdiu7vZ9QrYGaKc+LKNKE5TNzCZaQ4+9I0qPp8CISoSMCUV04szAuISembIFySFJ1oBnPCry8ckJUkmxeTxcMzii3LLggNRtJG89n1vsbEBu4uOSh3grYrqFZi8Tx7YVvnCs3ipU08DQLIgw+JV45ShJDXJ55Ju8AS3nfZwNondJkad3gmZGHgdUYHiDIt7r9jKDHZQ6y0UDosf5AKH72uJvMCl5JyqKyf9/9w4VWzMwnFdWiq4L0rTANRrjEoG+pUquW7HW+LyXSe/g21cxjZ9kZJy8kUYK2VOHxnk4Yyguteh5Bw0laHcfy0/+LlTKMbwD9MhbIHptI9D/oAySKKfkWnBf3YwUjCwZB9iimEBW7j/u5vT4cNVyAst86M/vramlYiQ7FMZivk3Jl/PSujERIfjOmOKJJA9jq4o1MlM0bci76HQOssYLR0w9o44UaAl2u7CD9dCAodRZL5IN3oGXomOQTQmCW7CQ83UX6nf62s/ez2rtAqms26L/5w7wLzZL+d2f1S4iwcHNpBGAxyGVTj2gCKIqg6xaUO21ipucm5AGLGpA5gryPfNVTV2G1QRE8SBbtSjHdPb7MN2qMkdcZiA2bMdAnNsN+e+BjZm1cKGTu+s8bmbpjUGAh5+OhOoa5MWcfjiyrBRaYlDBAaW5AEnnD9SSGXA3dvc0GFu6AlRIe01ljOQhf3CiPL9yirO9KR6b2twcHuKjDQnI9MEvRIMNTQRw5DSCN+uzgwy0WegZLtGImyasJ7ERv6as8YWzfitJXU5hslNMTHkzFwhaFAOJLQesw28V8uszpVg/jnoUGIZZSJ5ARBu/VbfAdjrRlgkAdilPMb8ck6Cw5VzwXNi1UGPtc4doLlD/dPTyUhDrw6M6CKwszv+/79QWTcdPqxNHENncGESBfpXXGiuUTVNr3TYtOJ8PDA9NCiAwmfLlXmqx3Tj3FYeRQBNT7BLR8Gju52u1OatLkDP/HcdjSR+H8hcYneVu2lg2b8JA+iv3YkT3z6PZHXcHOpRBoGr/5J+TK/Vd6S/urdMJtKHaLwgQDL4VsNKJiIfdtVRIG2c9Lfp9HUYNufCtxFI+C+yND1SJNUdPfaJEXb2VSqK4/SYZyL4sijnFG1bfZzRegiTk0+2vfIg2+RWQcod5JwZSONo+rO6z8604px/8UQko/1UzZh69qGwTPik9OJmysUNzqxOftx7YC2cjo/jvs4m8aoOwEeUSBT/Gc6M2vFy35ThOuweGbxW+bDMLKZIwyVgPbujt56DqkQ5TT38XioBZAB0v0AiqYouQG8bAtPi8yqb1dbq1VRa/9lVmD1nMHMGxzBAzagw42gdeFUU+OpiNMT4wFwYJKoZIhvcNAQkUMQoeCABVAHMAZQByMCMGCSqGSIb3DQEJFTEWBBRTOoUdfDA9Z6tbCBfA2jEWfFyTqTAwMCEwCQYFKw4DAhoFAAQUeurwA69B/01WlFIGmCVwGIPzlGgECLWNOGBgzvvwAgEB


          certificate-password: 123456
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      # - name: 检查构建文件
      #   run: |
      #     echo "检查 build/ios/ipa 目录内容："
      #     ls -la build/ios/ipa/
      #     echo "检查 build/ios 目录内容："
      #     ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/sweet_dream.ipa"
          APPLE_ID: "songxiuxiu@tjshangqian.shop"
          APP_SPECIFIC_PASSWORD: "xqub-kout-vivo-uccx"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
